buildscript {
    ext {
        kotlinVersion = '1.6.0'
        springBootVersion = '2.4.4'
        jacksonVersion = '2.12.2'
    }
    repositories {
        mavenCentral()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") {
            exclude(group: "org.springframework.boot", module: "spring-boot-starter-logging")
        }
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath "com.github.ben-manes:gradle-versions-plugin:0.36.0"

    }
}
buildscript {
    configurations['classpath'].resolutionStrategy.eachDependency {
        if (requested.group == 'org.jooq') {
            useVersion '3.14.8'
        }
    }
}

plugins {
    id 'nu.studer.jooq' version '6.0.1'
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.github.ben-manes.versions'

group = 'com.hceris'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
    jcenter()
}


dependencies {
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation ('org.springframework.boot:spring-boot-starter-web') {
        exclude(group: "org.springframework.boot", module: "spring-boot-starter-logging")
    }
    implementation ("org.joinfaces:primefaces-spring-boot-starter:4.6.8") {
        exclude(group: "org.springframework.boot", module: "spring-boot-starter-logging")
    }
    implementation ('org.springframework.boot:spring-boot-starter-jooq') {
        exclude(group: "org.springframework.boot", module: "spring-boot-starter-logging")
    }
    implementation "javax.enterprise:cdi-api:1.2"
    compileOnly 'javax.ejb:ejb-api:3.0'
    implementation group: 'org.jetbrains.exposed', name: 'exposed-core', version: '0.38.2'
    runtimeOnly group: 'org.jetbrains.exposed', name: 'exposed-jdbc', version: '0.38.2'
    implementation group: 'org.jetbrains.exposed', name: 'exposed-dao', version: '0.38.2'
    implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '2.7.5'
    implementation 'io.github.microutils:kotlin-logging-jvm:2.1.20'
    implementation 'at.favre.lib:bcrypt:0.9.0'
    implementation 'com.github.adminfaces:admin-theme:1.0.0'
    implementation 'org.reflections:reflections:0.10.2'
    implementation 'org.jetbrains.kotlin:kotlin-reflect:1.5.21'
    implementation 'org.mariadb.jdbc:mariadb-java-client:3.0.5'
    jooqGenerator 'org.mariadb.jdbc:mariadb-java-client:3.0.5'
    implementation 'org.jooq:jooq-meta:3.14.8'
    implementation "org.springframework.boot:spring-boot-starter-log4j2:${springBootVersion}"
    //implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.17.2'

}


import nu.studer.gradle.jooq.JooqEdition
import org.jooq.meta.jaxb.Logging


jooq {
    // use jOOQ version defined in Spring Boot
    version = dependencyManagement.importedProperties['jooq.version']
    edition = JooqEdition.OSS

    configurations {
        main {
            generationTool {
                logging = Logging.WARN
                jdbc {
                    driver = "org.mariadb.jdbc.Driver"
                    url = "jdbc:mariadb://localhost:3306/zeroeight"
                    user = "root"
                    password = ""
                }
                generator {
                    name = "org.jooq.codegen.KotlinGenerator"
                    database {
                        name = "org.jooq.meta.mariadb.MariaDBDatabase"
                        inputSchema = "zeroeight"
                    }
                    target {
                        packageName = "z8.gctrl.jooq"
                    }
                    generate {
                        deprecated = false
                        records = true
                        immutablePojos = true
                        fluentSetters = true
                    }

                    strategy.name = 'org.jooq.codegen.DefaultGeneratorStrategy'
                }
            }
        }
    }
}


compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = '1.8'
    }
}
